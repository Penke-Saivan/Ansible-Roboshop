---
- name: Setting up catalogue server
  hosts: catalogue
  become: yes
  tasks:
    - name: Disable current module
      ansible.builtin.command: dnf module disable nodejs -y

    - name: Enable required module
      ansible.builtin.command: dnf module enable nodejs:20 -y

    - name: Install NodeJS
      ansible.builtin.dnf:
        name: nodejs
        state: present

    - name: Add application User- System User
      ansible.builtin.user:
        name: roboshop
        comment: roboshop system user
        home: /app
        system: true
        shell: /sbin/nologin

    #Removing app directory if already exists
    - name: Lets remove an app directory if already exists.
      ansible.builtin.file:
        path: /app
        state: absent

    - name: Lets setup an app directory.
      ansible.builtin.file:
        path: /app
        state: directory

    #Removing catalogue file
    - name: Lets remove a catalogue file
      ansible.builtin.file:
        path: /tmp/catalogue.zip
        state: absent

    - name: Download the application code
      ansible.builtin.get_url:
        url: https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip
        dest: /tmp/catalogue.zip

    - name: Extract catalogue to application /app
      ansible.builtin.unarchive:
        src: /tmp/catalogue.zip
        dest: /app
        remote_src: yes

    - name: download the dependencies.
      community.general.npm:
        path: /app

    - name: copy catalogue service to /etc/systemd/system/catalogue.service
      ansible.builtin.copy:
        src: catalogue.service
        dest: /etc/systemd/system/catalogue.service

    - name: Copy mongodb repo to the remote server.
      ansible.builtin.copy:
        src: mongo.repo
        # src- Local path to a file to copy to the remote server.
        dest: /etc/yum.repos.d/mongo.repo
        # dest-Remote absolute path where the file should be copied to.

    - name: install mongodb-mongosh client
      ansible.builtin.dnf:
        name: mongodb-mongosh
        state: present

    - name: To check cataogue products are already loaded
      ansible.builtin.command: mongosh mongodb.believeinyou.fun --quiet --eval "db.getMongo().getDBNames().indexOf('catalogue')"
      register: catalogue_output

    - name: Display catalogue_output  
      ansible.builtin.debug:
        msg:"{{catalogue_output}}"  

    - name: Load Master Data of the List of products we want to sell and their quantity information also there in the same master data.
      ansible.builtin.command: mongosh --host mongodb.believeinyou.fun < /app/db/master-data.js
      when: catalogue_output.stdout | int < 0

    - name: daemon reload enable and start
      ansible.builtin.systemd_service:
        name: catalogue
        enabled: true
        state: started
        daemon_reload: true
